rei@arch:~/projects/kory33/kernel-vm-18-ClassValue-research/xuwei-k-bench$ sbt
WARNING: A terminally deprecated method in sun.misc.Unsafe has been called
WARNING: sun.misc.Unsafe::arrayBaseOffset has been called by net.openhft.hashing.UnsafeAccess (file:/home/rei/.sbt/boot/scala-2.12.19/org.scala-sbt/sbt/1.10.1/zero-allocation-hashing-0.16.jar)
WARNING: Please consider reporting this to the maintainers of class net.openhft.hashing.UnsafeAccess
WARNING: sun.misc.Unsafe::arrayBaseOffset will be removed in a future release
WARNING: A restricted method in java.lang.System has been called
WARNING: java.lang.System::load has been called by com.sun.jna.Native in an unnamed module (file:/home/rei/.sbt/boot/scala-2.12.19/org.scala-sbt/sbt/1.10.1/jna-5.13.0.jar)
WARNING: Use --enable-native-access=ALL-UNNAMED to avoid a warning for callers in this module
WARNING: Restricted methods will be blocked in a future release unless native access is enabled

Jmh / run -i 10 -wi 10 -f 1 -t 1 cats.effect.benchmarks.TagBenchmark -prof perfasm
[info] welcome to sbt 1.10.1 (Arch Linux Java 24.0.2)
[info] loading settings for project xuwei-k-bench-build from plugins.sbt ...
[info] loading project definition from /home/rei/projects/kory33/kernel-vm-18-ClassValue-research/xuwei-k-bench/project
[info] loading settings for project root from build.sbt ...
[info] set current project to xuwei-k-bench (in build file:/home/rei/projects/kory33/kernel-vm-18-ClassValue-research/xuwei-k-bench/)
[info] sbt server started at local:///home/rei/.sbt/1.0/server/9359b0841cc5772b222e/sock
[info] started sbt server
sbt:xuwei-k-bench> Jmh / run -i 10 -wi 10 -f 1 -t 1 cats.effect.benchmarks.TagBenchmark -prof perfasm
[info] running (fork) org.openjdk.jmh.Main -i 10 -wi 10 -f 1 -t 1 cats.effect.benchmarks.TagBenchmark -prof perfasm
[error] WARNING: A terminally deprecated method in sun.misc.Unsafe has been called
[error] WARNING: sun.misc.Unsafe::objectFieldOffset has been called by org.openjdk.jmh.util.Utils (file:/home/rei/projects/kory33/kernel-vm-18-ClassValue-research/xuwei-k-bench/target/bg-jobs/sbt_f6c7070d/target/c3bdf4c3/1296d6b9/jmh-core-1.37.jar)
[error] WARNING: Please consider reporting this to the maintainers of class org.openjdk.jmh.util.Utils
[error] WARNING: sun.misc.Unsafe::objectFieldOffset will be removed in a future release
[info] # JMH version: 1.37
[info] # VM version: JDK 24.0.2, OpenJDK 64-Bit Server VM, 24.0.2
[info] # VM invoker: /usr/lib/jvm/java-24-openjdk/bin/java
[info] # VM options: -XX:+UnlockDiagnosticVMOptions -XX:PrintAssemblyOptions=intel
[info] # Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
[info] # Warmup: 10 iterations, 10 s each
[info] # Measurement: 10 iterations, 10 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: cats.effect.benchmarks.TagBenchmark.classValue
[info] # Run progress: 0.00% complete, ETA 00:06:40
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfAsmProfiler
[info] # Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 3697910.194 ops/s
[info] # Warmup Iteration   2: 6140571.100 ops/s
[info] # Warmup Iteration   3: 5716030.728 ops/s
[info] # Warmup Iteration   4: 5728598.723 ops/s
[info] # Warmup Iteration   5: 5762639.130 ops/s
[info] # Warmup Iteration   6: 5757856.299 ops/s
[info] # Warmup Iteration   7: 5749736.490 ops/s
[info] # Warmup Iteration   8: 5754184.079 ops/s
[info] # Warmup Iteration   9: 5747141.332 ops/s
[info] # Warmup Iteration  10: 5743507.840 ops/s
[info] Iteration   1: 5632546.131 ops/s
[info] Iteration   2: 5738166.193 ops/s
[info] Iteration   3: 5747863.031 ops/s
[info] Iteration   4: 5739648.448 ops/s
[info] Iteration   5: 5746044.852 ops/s
[info] Iteration   6: 5755398.291 ops/s
[info] Iteration   7: 5748409.697 ops/s
[info] Iteration   8: 5736346.042 ops/s
[info] Iteration   9: 5735873.774 ops/s
[info] Iteration  10: 5765558.893 ops/s
[info] # Processing profiler results: LinuxPerfAsmProfiler
[info] Result "cats.effect.benchmarks.TagBenchmark.classValue":
[info]   5734585.535 ±(99.9%) 55996.550 ops/s [Average]
[info]   (min, avg, max) = (5632546.131, 5734585.535, 5765558.893), stdev = 37038.251
[info]   CI (99.9%): [5678588.985, 5790582.085] (assumes normal distribution)
[info] Secondary result "cats.effect.benchmarks.TagBenchmark.classValue:asm":
[info] PrintAssembly processed: 275455 total address lines.
[info] Perf output processed (skipped 105.176 seconds):
[info]  Column 1: cycles (100167 events)
[info] Hottest code regions (>10.00% "cycles" events):
[info]  Event counts are percents of total event count.
[info] ....[Hottest Region 1]..............................................................................
[info] c2, level 4, cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub, version 8, compile id 966
[info]                                                                                                    ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@27 (line 123)
[info]                                          0x00007fa063fdadbb:   test   r8d,r8d
[info]                                          0x00007fa063fdadbe:   jne    0x00007fa063fdb148           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
[info]                                                                                                    ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@30 (line 123)
[info]                                          0x00007fa063fdadc4:   mov    ebx,0x1
[info]           ╭                              0x00007fa063fdadc9:   jmp    0x00007fa063fdade7
[info]           │                          ↗   0x00007fa063fdadcb:   movzx  r10d,BYTE PTR [r11+0x94]     ;*goto {reexecute=0 rethrow=0 return_oop=0}
[info]           │                          │                                                             ; - cats.effect.benchmarks.TagBenchmark::classValue@313 (line 253)
[info]           │                          │                                                             ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@17 (line 121)
[info]           │                          │   0x00007fa063fdadd3:   mov    r8,QWORD PTR [r15+0x30]
[info]    0.01%  │                          │   0x00007fa063fdadd7:   add    rbx,0x1                      ; ImmutableOopMap {r11=Oop rdi=Oop r13=Oop r14=Oop }
[info]           │                          │                                                             ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
[info]           │                          │                                                             ; - (reexecute) cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@30 (line 123)
[info]           │                          │   0x00007fa063fdaddb:   test   DWORD PTR [r8],eax           ;   {poll}
[info]    0.02%  │                          │   0x00007fa063fdadde:   test   r10d,r10d
[info]    0.00%  │                          │   0x00007fa063fdade1:   jne    0x00007fa063fdb14d           ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
[info]           │                          │                                                             ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@33 (line 124)
[info]           ↘                          │   0x00007fa063fdade7:   xor    ebp,ebp
[info]    0.12%   ╭                         │   0x00007fa063fdade9:   jmp    0x00007fa063fdaf5a
[info]    0.79%   │                         │   0x00007fa063fdadee:   movabs r10,0x716040480              ;   {oop(&quot;Pure&quot;{0x0000000716040480})}
[info]            │╭                        │   0x00007fa063fdadf8:   jmp    0x00007fa063fdaf51
[info]    0.47%   ││                        │   0x00007fa063fdadfd:   movabs r10,0x7ffe15210              ;   {oop(&quot;Error&quot;{0x00000007ffe15210})}
[info]    0.00%   ││╭                       │   0x00007fa063fdae07:   jmp    0x00007fa063fdaf51
[info]    0.82%   │││                       │   0x00007fa063fdae0c:   movabs r10,0x7160407e0              ;   {oop(&quot;Delay&quot;{0x00000007160407e0})}
[info]            │││╭                      │   0x00007fa063fdae16:   jmp    0x00007fa063fdaf51
[info]    0.87%   ││││                      │   0x00007fa063fdae1b:   movabs r10,0x7160409a8              ;   {oop(&quot;ReadTime&quot;{0x00000007160409a8})}
[info]            ││││╭                     │   0x00007fa063fdae25:   jmp    0x00007fa063fdaf51
[info]    0.86%   │││││                     │   0x00007fa063fdae2a:   movabs r10,0x716040b70              ;   {oop(&quot;Monotonic&quot;{0x0000000716040b70})}
[info]            │││││╭                    │   0x00007fa063fdae34:   jmp    0x00007fa063fdaf51
[info]    1.33%   ││││││                    │   0x00007fa063fdae39:   movabs r10,0x716040d40              ;   {oop(&quot;ReadEC&quot;{0x0000000716040d40})}
[info]    2.73%   ││││││╭                   │   0x00007fa063fdae43:   jmp    0x00007fa063fdaf51
[info]    0.81%   │││││││                   │   0x00007fa063fdae48:   movabs r10,0x716040f08              ;   {oop(&quot;Map&quot;{0x0000000716040f08})}
[info]            │││││││╭                  │   0x00007fa063fdae52:   jmp    0x00007fa063fdaf51
[info]    1.30%   ││││││││                  │   0x00007fa063fdae57:   movabs r10,0x7160410d0              ;   {oop(&quot;FlatMap&quot;{0x00000007160410d0})}
[info]            ││││││││╭                 │   0x00007fa063fdae61:   jmp    0x00007fa063fdaf51
[info]    0.38%   │││││││││                 │   0x00007fa063fdae66:   movabs r10,0x716041298              ;   {oop(&quot;Attempt&quot;{0x0000000716041298})}
[info]    2.02%   │││││││││╭                │   0x00007fa063fdae70:   jmp    0x00007fa063fdaf51
[info]    0.84%   ││││││││││                │   0x00007fa063fdae75:   movabs r10,0x716041460              ;   {oop(&quot;HandleErrorWith&quot;{0x0000000716041460})}
[info]            ││││││││││╭               │   0x00007fa063fdae7f:   jmp    0x00007fa063fdaf51
[info]    0.85%   │││││││││││               │   0x00007fa063fdae84:   movabs r10,0x716041630              ;   {oop(&quot;Canceled&quot;{0x0000000716041630})}
[info]    0.00%   │││││││││││╭              │   0x00007fa063fdae8e:   jmp    0x00007fa063fdaf51
[info]    0.86%   ││││││││││││              │   0x00007fa063fdae93:   movabs r10,0x7160417f8              ;   {oop(&quot;OnCancel&quot;{0x00000007160417f8})}
[info]            ││││││││││││╭             │   0x00007fa063fdae9d:   jmp    0x00007fa063fdaf51
[info]    0.44%   │││││││││││││             │   0x00007fa063fdaea2:   movabs r10,0x7160419c0              ;   {oop(&quot;Uncancelable&quot;{0x00000007160419c0})}
[info]            │││││││││││││╭            │   0x00007fa063fdaeac:   jmp    0x00007fa063fdaf51
[info]    0.82%   ││││││││││││││            │   0x00007fa063fdaeb1:   movabs r10,0x716041b90              ;   {oop(&quot;UnmaskRunLoop&quot;{0x0000000716041b90})}
[info]            ││││││││││││││╭           │   0x00007fa063fdaebb:   jmp    0x00007fa063fdaf51
[info]    0.87%   │││││││││││││││           │   0x00007fa063fdaec0:   movabs r10,0x716041d60              ;   {oop(&quot;IOCont&quot;{0x0000000716041d60})}
[info]            │││││││││││││││╭          │   0x00007fa063fdaeca:   jmp    0x00007fa063fdaf51
[info]    0.28%   ││││││││││││││││          │   0x00007fa063fdaecf:   movabs r10,0x716041f28              ;   {oop(&quot;Get&quot;{0x0000000716041f28})}
[info]            ││││││││││││││││╭         │   0x00007fa063fdaed9:   jmp    0x00007fa063fdaf51
[info]    0.84%   │││││││││││││││││         │   0x00007fa063fdaedb:   movabs r10,0x7160420f0              ;   {oop(&quot;Cede&quot;{0x00000007160420f0})}
[info]            │││││││││││││││││╭        │   0x00007fa063fdaee5:   jmp    0x00007fa063fdaf51
[info]    0.87%   ││││││││││││││││││        │   0x00007fa063fdaee7:   movabs r10,0x7160422b8              ;   {oop(&quot;Start&quot;{0x00000007160422b8})}
[info]            ││││││││││││││││││╭       │   0x00007fa063fdaef1:   jmp    0x00007fa063fdaf51
[info]    0.87%   │││││││││││││││││││       │   0x00007fa063fdaef3:   movabs r10,0x716042480              ;   {oop(&quot;RacePair&quot;{0x0000000716042480})}
[info]            │││││││││││││││││││╭      │   0x00007fa063fdaefd:   jmp    0x00007fa063fdaf51
[info]    0.86%   ││││││││││││││││││││      │   0x00007fa063fdaeff:   movabs r10,0x716042648              ;   {oop(&quot;Sleep&quot;{0x0000000716042648})}
[info]            ││││││││││││││││││││╭     │   0x00007fa063fdaf09:   jmp    0x00007fa063fdaf51
[info]    0.70%   │││││││││││││││││││││     │   0x00007fa063fdaf0b:   movabs r10,0x716042810              ;   {oop(&quot;EvalOn&quot;{0x0000000716042810})}
[info]            │││││││││││││││││││││╭    │   0x00007fa063fdaf15:   jmp    0x00007fa063fdaf51
[info]    0.83%   ││││││││││││││││││││││    │   0x00007fa063fdaf17:   movabs r10,0x7160429d8              ;   {oop(&quot;Blocking&quot;{0x00000007160429d8})}
[info]            ││││││││││││││││││││││╭   │   0x00007fa063fdaf21:   jmp    0x00007fa063fdaf51
[info]    0.83%   │││││││││││││││││││││││   │   0x00007fa063fdaf23:   movabs r10,0x716042ba0              ;   {oop(&quot;Local&quot;{0x0000000716042ba0})}
[info]            │││││││││││││││││││││││╭  │   0x00007fa063fdaf2d:   jmp    0x00007fa063fdaf51
[info]    0.85%   ││││││││││││││││││││││││  │   0x00007fa063fdaf2f:   movabs r10,0x716042d68              ;   {oop(&quot;IOTrace&quot;{0x0000000716042d68})}
[info]            ││││││││││││││││││││││││╭ │   0x00007fa063fdaf39:   jmp    0x00007fa063fdaf51
[info]    0.51%   │││││││││││││││││││││││││ │   0x00007fa063fdaf3b:   movabs r10,0x716042f30              ;   {oop(&quot;ReadRT&quot;{0x0000000716042f30})}
[info]            │││││││││││││││││││││││││╭│   0x00007fa063fdaf45:   jmp    0x00007fa063fdaf51
[info]    0.62%   │││││││││││││││││││││││││││   0x00007fa063fdaf47:   movabs r10,0x7160430f8              ;*invokestatic consumeCompiler {reexecute=0 rethrow=0 return_oop=0}
[info]            │││││││││││││││││││││││││││                                                             ; - org.openjdk.jmh.infra.Blackhole::consume@7 (line 323)
[info]            │││││││││││││││││││││││││││                                                             ; - cats.effect.benchmarks.TagBenchmark::classValue@307 (line 252)
[info]            │││││││││││││││││││││││││││                                                             ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@17 (line 121)
[info]            │││││││││││││││││││││││││││                                                             ;   {oop(&quot;EndFiber&quot;{0x00000007160430f8})}
[info]    0.00%   │↘↘↘↘↘↘↘↘↘↘↘↘↘↘↘↘↘↘↘↘↘↘↘↘↘│   0x00007fa063fdaf51:   cmp    ebp,0x1a
[info]    0.58%   │                         ╰   0x00007fa063fdaf54:   jge    0x00007fa063fdadcb           ;*getstatic MODULE$ {reexecute=0 rethrow=0 return_oop=0}
[info]            │                                                                                       ; - cats.effect.benchmarks.TagBenchmark::classValue@13 (line 222)
[info]            │                                                                                       ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@17 (line 121)
[info]            ↘                             0x00007fa063fdaf5a:   movabs r10,0x716391160              ;   {oop(a &apos;cats/effect/benchmarks/FakeIO&apos;[26] {0x0000000716391160})}
[info]    0.01%                                 0x00007fa063fdaf64:   mov    r8d,DWORD PTR [r10+rbp*4+0x10];*aaload {reexecute=0 rethrow=0 return_oop=0}
[info]                                                                                                    ; - cats.effect.benchmarks.TagBenchmark::classValue@26 (line 223)
[info]                                                                                                    ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@17 (line 121)
[info]    2.03%                                 0x00007fa063fdaf69:   mov    r8d,DWORD PTR [r12+r8*8+0x8] ; implicit exception: dispatches to 0x00007fa063fdb31c
[info]    1.96%                                 0x00007fa063fdaf6e:   movabs r10,0x7f9ffa000000
[info]    0.00%                                 0x00007fa063fdaf78:   add    r10,r8
[info]    3.49%                                 0x00007fa063fdaf7b:   mov    r10,QWORD PTR [r10+0x70]
[info]    1.71%                                 0x00007fa063fdaf7f:   mov    rcx,QWORD PTR [r10]          ;*invokevirtual getClass {reexecute=0 rethrow=0 return_oop=0}
[info]                                                                                                    ; - cats.effect.benchmarks.TagBenchmark::classValue@27 (line 223)
[info]                                                                                                    ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@17 (line 121)
[info]    1.53%                                 0x00007fa063fdaf82:   mov    esi,DWORD PTR [rcx+0x60]     ;*getfield classValueMap {reexecute=0 rethrow=0 return_oop=0}
[info]                                                                                                    ; - java.lang.ClassValue::getCacheCarefully@1 (line 191)
[info]                                                                                                    ; - java.lang.ClassValue::get@1 (line 104)
[info]                                                                                                    ; - cats.effect.benchmarks.TagBenchmark::classValue@30 (line 223)
[info]                                                                                                    ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@17 (line 121)
[info]    2.02%                                 0x00007fa063fdaf85:   test   esi,esi
[info]    0.01%                                 0x00007fa063fdaf87:   je     0x00007fa063fdb076           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
[info]                                                                                                    ; - java.lang.ClassValue::getCacheCarefully@6 (line 192)
[info]                                                                                                    ; - java.lang.ClassValue::get@1 (line 104)
[info]                                                                                                    ; - cats.effect.benchmarks.TagBenchmark::classValue@30 (line 223)
[info]                                                                                                    ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@17 (line 121)
[info]                                          0x00007fa063fdaf8d:   mov    esi,DWORD PTR [r12+rsi*8+0x38];*getfield cacheArray {reexecute=0 rethrow=0 return_oop=0}
[info]                                                                                                    ; - java.lang.ClassValue$ClassValueMap::getCache@1 (line 434)
[info]                                                                                                    ; - java.lang.ClassValue::getCacheCarefully@14 (line 193)
[info]                                                                                                    ; - java.lang.ClassValue::get@1 (line 104)
[info]                                                                                                    ; - cats.effect.benchmarks.TagBenchmark::classValue@30 (line 223)
[info]                                                                                                    ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@17 (line 121)
[info]    2.10%                                 0x00007fa063fdaf92:   test   esi,esi
[info]    0.33%                                 0x00007fa063fdaf94:   je     0x00007fa063fdb0b4           ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
[info]                                                                                                    ; - java.lang.ClassValue$ClassValueMap::loadFromCache@3 (line 548)
[info]                                                                                                    ; - java.lang.ClassValue$ClassValueMap::probeHomeLocation@6 (line 554)
[info]                                                                                                    ; - java.lang.ClassValue::get@7 (line 104)
[info]                                                                                                    ; - cats.effect.benchmarks.TagBenchmark::classValue@30 (line 223)
[info]                                                                                                    ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@17 (line 121)
[info]                                          0x00007fa063fdaf9a:   mov    rdx,rsi
[info]    0.00%                                 0x00007fa063fdaf9d:   shl    rdx,0x3                      ;*invokestatic getCacheCarefully {reexecute=0 rethrow=0 return_oop=0}
[info]                                                                                                    ; - java.lang.ClassValue::get@1 (line 104)
[info]                                                                                                    ; - cats.effect.benchmarks.TagBenchmark::classValue@30 (line 223)
[info]                                                                                                    ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@17 (line 121)
[info]    3.39%                                 0x00007fa063fdafa1:   mov    esi,DWORD PTR [rdx+0xc]      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
[info]                                                                                                    ; - java.lang.ClassValue$ClassValueMap::loadFromCache@3 (line 548)
[info]                                                                                                    ; - java.lang.ClassValue$ClassValueMap::probeHomeLocation@6 (line 554)
[info]                                                                                                    ; - java.lang.ClassValue::get@7 (line 104)
[info]                                                                                                    ; - cats.effect.benchmarks.TagBenchmark::classValue@30 (line 223)
[info]                                                                                                    ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@17 (line 121)
[info]    2.51%                                 0x00007fa063fdafa4:   lea    r10d,[rsi-0x1]
[info]    0.08%                                 0x00007fa063fdafa8:   and    r10d,0x255992d5              ;*iand {reexecute=0 rethrow=0 return_oop=0}
[info]                                                                                                    ; - java.lang.ClassValue$ClassValueMap::loadFromCache@6 (line 548)
[info]                                                                                                    ; - java.lang.ClassValue$ClassValueMap::probeHomeLocation@6 (line 554)
[info]                                                                                                    ; - java.lang.ClassValue::get@7 (line 104)
[info]                                                                                                    ; - cats.effect.benchmarks.TagBenchmark::classValue@30 (line 223)
[info]                                                                                                    ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@17 (line 121)
[info]    0.54%                                 0x00007fa063fdafaf:   test   esi,esi
[info]    0.13%                                 0x00007fa063fdafb1:   jbe    0x00007fa063fdb0c8
[info]                                          0x00007fa063fdafb7:   mov    r10d,DWORD PTR [rdx+r10*4+0x10];*aaload {reexecute=0 rethrow=0 return_oop=0}
[info]                                                                                                    ; - java.lang.ClassValue$ClassValueMap::loadFromCache@7 (line 548)
[info]                                                                                                    ; - java.lang.ClassValue$ClassValueMap::probeHomeLocation@6 (line 554)
[info]                                                                                                    ; - java.lang.ClassValue::get@7 (line 104)
[info]                                                                                                    ; - cats.effect.benchmarks.TagBenchmark::classValue@30 (line 223)
[info]                                                                                                    ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@17 (line 121)
[info]    5.91%                                 0x00007fa063fdafbc:   test   r10d,r10d
[info]    0.22%                              ╭  0x00007fa063fdafbf:   je     0x00007fa063fdb02d           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
[info]                                       │                                                            ; - java.lang.ClassValue::match@1 (line 245)
[info]                                       │                                                            ; - java.lang.ClassValue::get@13 (line 107)
[info]                                       │                                                            ; - cats.effect.benchmarks.TagBenchmark::classValue@30 (line 223)
[info]                                       │                                                            ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@17 (line 121)
[info]                                       │  0x00007fa063fdafc1:   mov    r9d,DWORD PTR [r12+r10*8+0xc]
[info]   14.77%                              │  0x00007fa063fdafc6:   mov    esi,r9d
[info]    1.59%                              │  0x00007fa063fdafc9:   shl    rsi,0x3
[info]    0.00%                              │  0x00007fa063fdafcd:   cmp    BYTE PTR [r15+0x48],0x0
[info]    0.05%                              │  0x00007fa063fdafd2:   jne    0x00007fa063fdb462           ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
[info]                                       │                                                            ; - java.lang.ClassValue::match@5 (line 245)
[info]                                       │                                                            ; - java.lang.ClassValue::get@13 (line 107)
[info]                                       │                                                            ; - cats.effect.benchmarks.TagBenchmark::classValue@30 (line 223)
[info]                                       │                                                            ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@17 (line 121)
[info]    0.00%                              │  0x00007fa063fdafd8:   movabs r8,0x716341548               ;   {oop(a &apos;cats/effect/benchmarks/TagBenchmark$$anon$1&apos;{0x0000000716341548})}
[info]    0.01%                              │  0x00007fa063fdafe2:   mov    r8d,DWORD PTR [r8+0x14]      ;*getfield version {reexecute=0 rethrow=0 return_oop=0}
[info]                                       │                                                            ; - java.lang.ClassValue::match@9 (line 245)
[info]                                       │                                                            ; - java.lang.ClassValue::get@13 (line 107)
[info]                                       │                                                            ; - cats.effect.benchmarks.TagBenchmark::classValue@30 (line 223)
[info]                                       │                                                            ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@17 (line 121)
[info]                                       │  0x00007fa063fdafe6:   cmp    r9d,r8d
[info]    0.16%                              │  0x00007fa063fdafe9:   jne    0x00007fa063fdb104           ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
[info]                                       │                                                            ; - java.lang.ClassValue::match@12 (line 245)
[info]                                       │                                                            ; - java.lang.ClassValue::get@13 (line 107)
[info]                                       │                                                            ; - cats.effect.benchmarks.TagBenchmark::classValue@30 (line 223)
[info]                                       │                                                            ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@17 (line 121)
[info]                                       │  0x00007fa063fdafef:   mov    r8d,DWORD PTR [r12+r10*8+0x1c]
[info]    2.62%                              │  0x00007fa063fdaff4:   mov    rax,r8
[info]    1.66%                              │  0x00007fa063fdaff7:   shl    rax,0x3                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
[info]                                       │                                                            ; - cats.effect.benchmarks.TagBenchmark::classValue@30 (line 223)
[info]                                       │                                                            ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@17 (line 121)
[info]    0.00%                              │  0x00007fa063fdaffb:   mov    esi,DWORD PTR [rax+0x8]      ; implicit exception: dispatches to 0x00007fa063fdb330
[info]   16.30%                              │  0x00007fa063fdaffe:   cmp    esi,0x18f018                 ;   {metadata(&apos;java/lang/Byte&apos;)}
[info]                                       │  0x00007fa063fdb004:   jne    0x00007fa063fdb2ec           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
[info]                                       │                                                            ; - scala.runtime.BoxesRunTime::unboxToByte@9 (line 91)
[info]                                       │                                                            ; - cats.effect.benchmarks.TagBenchmark::classValue@33 (line 223)
[info]                                       │                                                            ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@17 (line 121)
[info]    0.00%                              │  0x00007fa063fdb00a:   movsx  r8d,BYTE PTR [rax+0xc]       ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
[info]                                       │                                                            ; - java.lang.Byte::byteValue@1 (line 383)
[info]                                       │                                                            ; - scala.runtime.BoxesRunTime::unboxToByte@12 (line 91)
[info]                                       │                                                            ; - cats.effect.benchmarks.TagBenchmark::classValue@33 (line 223)
[info]                                       │                                                            ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@17 (line 121)
[info]    1.13%                              │  0x00007fa063fdb00f:   lea    r10d,[r8+0x1]
[info]    0.01%                              │  0x00007fa063fdb013:   cmp    r10d,0x1a
[info]    7.08%                              │  0x00007fa063fdb017:   jae    0x00007fa063fdb085           ;*tableswitch {reexecute=0 rethrow=0 return_oop=0}
[info]                                       │                                                            ; - cats.effect.benchmarks.TagBenchmark::classValue@40 (line 225)
[info]                                       │                                                            ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@17 (line 121)
[info]                                       │  0x00007fa063fdb019:   movsxd r8,r8d
[info]                                       │  0x00007fa063fdb01c:   inc    ebp                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
[info]                                       │                                                            ; - cats.effect.benchmarks.TagBenchmark::classValue@310 (line 253)
[info]                                       │                                                            ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@17 (line 121)
[info]    0.57%                              │  0x00007fa063fdb01e:   movabs r10,0x7fa063fdaa30           ;   {section_word}
[info]    0.00%                              │  0x00007fa063fdb028:   jmp    QWORD PTR [r10+r8*8+0x8]     ;*tableswitch {reexecute=0 rethrow=0 return_oop=0}
[info]                                       │                                                            ; - cats.effect.benchmarks.TagBenchmark::classValue@40 (line 225)
[info]                                       │                                                            ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub@17 (line 121)
[info]                                       ↘  0x00007fa063fdb02d:   mov    QWORD PTR [rsp+0x8],rbx
[info]                                          0x00007fa063fdb032:   mov    QWORD PTR [rsp],r11
[info]                                          0x00007fa063fdb036:   mov    QWORD PTR [rsp+0x70],rdi
[info]                                          0x00007fa063fdb03b:   mov    QWORD PTR [rsp+0x68],r13
[info]                                          0x00007fa063fdb040:   mov    QWORD PTR [rsp+0x60],r14
[info]                                          0x00007fa063fdb045:   movabs rsi,0x716341548              ;   {oop(a &apos;cats/effect/benchmarks/TagBenchmark$$anon$1&apos;{0x0000000716341548})}
[info]                                          0x00007fa063fdb04f:   call   0x00007fa0638ad360           ; ImmutableOopMap {[0]=Oop [96]=Oop [104]=Oop [112]=Oop }
[info]                                                                                                    ;*invokevirtual getFromBackup {reexecute=0 rethrow=0 return_oop=1}
[info] ....................................................................................................
[info]   99.81%  <total for region 1>
[info] ....[Hottest Regions]...............................................................................
[info]   99.81%       c2, level 4  cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub, version 8, compile id 966
[info]    0.01%                    <unknown>
[info]    0.01%         libjvm.so  [unknown]
[info]    0.01%            kernel  [unknown]
[info]    0.00%            kernel  [unknown]
[info]    0.00%            kernel  [unknown]
[info]    0.00%            kernel  [unknown]
[info]    0.00%            kernel  [unknown]
[info]    0.00%         libjvm.so  [unknown]
[info]    0.00%         libjvm.so  [unknown]
[info]    0.00%                    <unknown>
[info]    0.00%         libc.so.6  clock_gettime
[info]    0.00%                    <unknown>
[info]    0.00%            kernel  [unknown]
[info]    0.00%            kernel  [unknown]
[info]    0.00%            kernel  [unknown]
[info]    0.00%         libc.so.6  pthread_cond_timedwait
[info]    0.00%                    <unknown>
[info]    0.00%            kernel  [unknown]
[info]    0.00%            kernel  [unknown]
[info]    0.11%  <...other 103 warm regions...>
[info] ....................................................................................................
[info]  100.00%  <totals>
[info] ....[Hottest Methods (after inlining)]..............................................................
[info]   99.81%       c2, level 4  cats.effect.benchmarks.jmh_generated.TagBenchmark_classValue_jmhTest::classValue_thrpt_jmhStub, version 8, compile id 966
[info]    0.06%            kernel  [unknown]
[info]    0.05%         libjvm.so  [unknown]
[info]    0.04%                    <unknown>
[info]    0.01%         libc.so.6  [unknown]
[info]    0.01%    hsdis-amd64.so  print_insn
[info]    0.00%         libc.so.6  clock_gettime
[info]    0.00%         libc.so.6  _IO_fflush
[info]    0.00%         libc.so.6  pthread_cond_timedwait
[info]    0.00%       interpreter  getstatic  178 getstatic
[info]    0.00%         libc.so.6  _IO_fwrite
[info]    0.00%         libc.so.6  malloc
[info]    0.00%         libc.so.6  write
[info]    0.00%       c1, level 3  java.lang.Class::getDeclaredField, version 1, compile id 596
[info]    0.00%       interpreter  nofast_getfield  234 nofast_getfield
[info]    0.00%  Unknown, level 0  java.lang.System::identityHashCode, version 1, compile id 758
[info]    0.00%    hsdis-amd64.so  init_disassemble_info
[info]    0.00%       interpreter  method entry point (kind = zerolocals)
[info]    0.00%    hsdis-amd64.so  hsdis_read_memory_func
[info]    0.00%         libc.so.6  pthread_mutex_unlock
[info]    0.01%  <...other 7 warm methods...>
[info] ....................................................................................................
[info]  100.00%  <totals>
[info] ....[Distribution by Source]........................................................................
[info]   99.81%       c2, level 4
[info]    0.06%            kernel
[info]    0.05%         libjvm.so
[info]    0.04%
[info]    0.03%         libc.so.6
[info]    0.01%    hsdis-amd64.so
[info]    0.01%       interpreter
[info]    0.00%       c1, level 3
[info]    0.00%            [vdso]
[info]    0.00%  Unknown, level 0
[info] ....................................................................................................
[info]  100.00%  <totals>
[info] # JMH version: 1.37
[info] # VM version: JDK 24.0.2, OpenJDK 64-Bit Server VM, 24.0.2
[info] # VM invoker: /usr/lib/jvm/java-24-openjdk/bin/java
[info] # VM options: -XX:+UnlockDiagnosticVMOptions -XX:PrintAssemblyOptions=intel
[info] # Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
[info] # Warmup: 10 iterations, 10 s each
[info] # Measurement: 10 iterations, 10 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: cats.effect.benchmarks.TagBenchmark.tag
[info] # Run progress: 50.00% complete, ETA 00:03:27
[info] # Fork: 1 of 1
[info] # Preparing profilers: LinuxPerfAsmProfiler
[info] # Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
[info] # Warmup Iteration   1: 4398209.660 ops/s
[info] # Warmup Iteration   2: 3966907.442 ops/s
[info] # Warmup Iteration   3: 6038203.010 ops/s
[info] # Warmup Iteration   4: 6012318.947 ops/s
[info] # Warmup Iteration   5: 5996885.740 ops/s
[info] # Warmup Iteration   6: 6051857.499 ops/s
[info] # Warmup Iteration   7: 5960767.068 ops/s
[info] # Warmup Iteration   8: 5980714.458 ops/s
[info] # Warmup Iteration   9: 5977342.258 ops/s
[info] # Warmup Iteration  10: 5987555.159 ops/s
[info] Iteration   1: 6006740.011 ops/s
[info] Iteration   2: 5959827.046 ops/s
[info] Iteration   3: 5961320.107 ops/s
[info] Iteration   4: 5986731.985 ops/s
[info] Iteration   5: 5964564.461 ops/s
[info] Iteration   6: 6040893.505 ops/s
[info] Iteration   7: 5985493.842 ops/s
[info] Iteration   8: 6032345.465 ops/s
[info] Iteration   9: 6002947.901 ops/s
[info] Iteration  10: 5982652.834 ops/s
[info] # Processing profiler results: LinuxPerfAsmProfiler
[info] Result "cats.effect.benchmarks.TagBenchmark.tag":
[info]   5992351.716 ±(99.9%) 42882.574 ops/s [Average]
[info]   (min, avg, max) = (5959827.046, 5992351.716, 6040893.505), stdev = 28364.168
[info]   CI (99.9%): [5949469.142, 6035234.290] (assumes normal distribution)
[info] Secondary result "cats.effect.benchmarks.TagBenchmark.tag:asm":
[info] PrintAssembly processed: 273213 total address lines.
[info] Perf output processed (skipped 104.898 seconds):
[info]  Column 1: cycles (100159 events)
[info] Hottest code regions (>10.00% "cycles" events):
[info]  Event counts are percents of total event count.
[info] ....[Hottest Region 1]..............................................................................
[info] c2, level 4, cats.effect.benchmarks.jmh_generated.TagBenchmark_tag_jmhTest::tag_thrpt_jmhStub, version 8, compile id 972
[info]                                          0x00007f6f2bfdd6ca:   mov    r8,QWORD PTR [rsp+0x40]
[info]                                          0x00007f6f2bfdd6cf:   movzx  r10d,BYTE PTR [r8+0x94]      ; implicit exception: dispatches to 0x00007f6f2bfdd9a4
[info]                                                                                                    ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
[info]                                                                                                    ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_tag_jmhTest::tag_thrpt_jmhStub@27 (line 123)
[info]                                          0x00007f6f2bfdd6d7:   test   r10d,r10d
[info]                                          0x00007f6f2bfdd6da:   jne    0x00007f6f2bfdd8ec           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
[info]                                                                                                    ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_tag_jmhTest::tag_thrpt_jmhStub@30 (line 123)
[info]                                          0x00007f6f2bfdd6e0:   mov    ebx,0x1
[info]           ╭                              0x00007f6f2bfdd6e5:   jmp    0x00007f6f2bfdd70d
[info]           │                          ↗   0x00007f6f2bfdd6e7:   mov    r8,QWORD PTR [rsp+0x40]
[info]    0.30%  │                          │   0x00007f6f2bfdd6ec:   movzx  r11d,BYTE PTR [r8+0x94]      ;*goto {reexecute=0 rethrow=0 return_oop=0}
[info]           │                          │                                                             ; - cats.effect.benchmarks.TagBenchmark::tag@301 (line 213)
[info]           │                          │                                                             ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_tag_jmhTest::tag_thrpt_jmhStub@17 (line 121)
[info]    0.54%  │                          │   0x00007f6f2bfdd6f4:   mov    r10,QWORD PTR [r15+0x30]
[info]    0.00%  │                          │   0x00007f6f2bfdd6f8:   mov    rbx,QWORD PTR [rsp+0x8]
[info]           │                          │   0x00007f6f2bfdd6fd:   add    rbx,0x1                      ; ImmutableOopMap {r8=Oop [0]=Oop [72]=Oop [80]=Oop }
[info]           │                          │                                                             ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
[info]           │                          │                                                             ; - (reexecute) cats.effect.benchmarks.jmh_generated.TagBenchmark_tag_jmhTest::tag_thrpt_jmhStub@30 (line 123)
[info]           │                          │   0x00007f6f2bfdd701:   test   DWORD PTR [r10],eax          ;   {poll}
[info]    0.17%  │                          │   0x00007f6f2bfdd704:   test   r11d,r11d
[info]    0.01%  │                          │   0x00007f6f2bfdd707:   jne    0x00007f6f2bfdd8f1           ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
[info]           │                          │                                                             ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_tag_jmhTest::tag_thrpt_jmhStub@33 (line 124)
[info]           ↘                          │   0x00007f6f2bfdd70d:   xor    ebp,ebp
[info]                                      │   0x00007f6f2bfdd70f:   mov    QWORD PTR [rsp+0x40],r8
[info]                                      │   0x00007f6f2bfdd714:   mov    QWORD PTR [rsp+0x8],rbx
[info]    0.00%   ╭                         │   0x00007f6f2bfdd719:   jmp    0x00007f6f2bfdd88a
[info]    0.05%   │                         │   0x00007f6f2bfdd71e:   movabs r10,0x716053800              ;   {oop(&quot;Pure&quot;{0x0000000716053800})}
[info]    0.15%   │╭                        │   0x00007f6f2bfdd728:   jmp    0x00007f6f2bfdd881
[info]    0.00%   ││                        │   0x00007f6f2bfdd72d:   movabs r10,0x7ffe15210              ;   {oop(&quot;Error&quot;{0x00000007ffe15210})}
[info]    0.17%   ││╭                       │   0x00007f6f2bfdd737:   jmp    0x00007f6f2bfdd881
[info]            │││                       │   0x00007f6f2bfdd73c:   movabs r10,0x716053830              ;   {oop(&quot;Delay&quot;{0x0000000716053830})}
[info]    0.21%   │││╭                      │   0x00007f6f2bfdd746:   jmp    0x00007f6f2bfdd881
[info]    0.00%   ││││                      │   0x00007f6f2bfdd74b:   movabs r10,0x716053860              ;   {oop(&quot;ReadTime&quot;{0x0000000716053860})}
[info]    0.18%   ││││╭                     │   0x00007f6f2bfdd755:   jmp    0x00007f6f2bfdd881
[info]    0.00%   │││││                     │   0x00007f6f2bfdd75a:   movabs r10,0x716053890              ;   {oop(&quot;Monotonic&quot;{0x0000000716053890})}
[info]    0.19%   │││││╭                    │   0x00007f6f2bfdd764:   jmp    0x00007f6f2bfdd881
[info]    0.00%   ││││││                    │   0x00007f6f2bfdd769:   movabs r10,0x7160538c8              ;   {oop(&quot;ReadEC&quot;{0x00000007160538c8})}
[info]    0.16%   ││││││╭                   │   0x00007f6f2bfdd773:   jmp    0x00007f6f2bfdd881
[info]    0.00%   │││││││                   │   0x00007f6f2bfdd778:   movabs r10,0x7160538f8              ;   {oop(&quot;Map&quot;{0x00000007160538f8})}
[info]    0.17%   │││││││╭                  │   0x00007f6f2bfdd782:   jmp    0x00007f6f2bfdd881
[info]    0.08%   ││││││││                  │   0x00007f6f2bfdd787:   movabs r10,0x716053928              ;   {oop(&quot;FlatMap&quot;{0x0000000716053928})}
[info]    0.09%   ││││││││╭                 │   0x00007f6f2bfdd791:   jmp    0x00007f6f2bfdd881
[info]    0.08%   │││││││││                 │   0x00007f6f2bfdd796:   movabs r10,0x716053958              ;   {oop(&quot;Attempt&quot;{0x0000000716053958})}
[info]    0.09%   │││││││││╭                │   0x00007f6f2bfdd7a0:   jmp    0x00007f6f2bfdd881
[info]    0.09%   ││││││││││                │   0x00007f6f2bfdd7a5:   movabs r10,0x716053988              ;   {oop(&quot;HandleErrorWith&quot;{0x0000000716053988})}
[info]    0.07%   ││││││││││╭               │   0x00007f6f2bfdd7af:   jmp    0x00007f6f2bfdd881
[info]    0.04%   │││││││││││               │   0x00007f6f2bfdd7b4:   movabs r10,0x7160539c0              ;   {oop(&quot;Canceled&quot;{0x00000007160539c0})}
[info]    0.16%   │││││││││││╭              │   0x00007f6f2bfdd7be:   jmp    0x00007f6f2bfdd881
[info]    0.00%   ││││││││││││              │   0x00007f6f2bfdd7c3:   movabs r10,0x7160539f0              ;   {oop(&quot;OnCancel&quot;{0x00000007160539f0})}
[info]    0.16%   ││││││││││││╭             │   0x00007f6f2bfdd7cd:   jmp    0x00007f6f2bfdd881
[info]    0.11%   │││││││││││││             │   0x00007f6f2bfdd7d2:   movabs r10,0x716053a20              ;   {oop(&quot;Uncancelable&quot;{0x0000000716053a20})}
[info]    0.07%   │││││││││││││╭            │   0x00007f6f2bfdd7dc:   jmp    0x00007f6f2bfdd881
[info]    0.01%   ││││││││││││││            │   0x00007f6f2bfdd7e1:   movabs r10,0x716053a58              ;   {oop(&quot;UnmaskRunLoop&quot;{0x0000000716053a58})}
[info]    0.21%   ││││││││││││││╭           │   0x00007f6f2bfdd7eb:   jmp    0x00007f6f2bfdd881
[info]    0.01%   │││││││││││││││           │   0x00007f6f2bfdd7f0:   movabs r10,0x716053a90              ;   {oop(&quot;IOCont&quot;{0x0000000716053a90})}
[info]    0.18%   │││││││││││││││╭          │   0x00007f6f2bfdd7fa:   jmp    0x00007f6f2bfdd881
[info]    0.04%   ││││││││││││││││          │   0x00007f6f2bfdd7ff:   movabs r10,0x716053ac0              ;   {oop(&quot;Get&quot;{0x0000000716053ac0})}
[info]    0.19%   ││││││││││││││││╭         │   0x00007f6f2bfdd809:   jmp    0x00007f6f2bfdd881
[info]    0.05%   │││││││││││││││││         │   0x00007f6f2bfdd80b:   movabs r10,0x716053af0              ;   {oop(&quot;Cede&quot;{0x0000000716053af0})}
[info]    0.12%   │││││││││││││││││╭        │   0x00007f6f2bfdd815:   jmp    0x00007f6f2bfdd881
[info]    0.18%   ││││││││││││││││││        │   0x00007f6f2bfdd817:   movabs r10,0x716053b20              ;   {oop(&quot;Start&quot;{0x0000000716053b20})}
[info]    0.01%   ││││││││││││││││││╭       │   0x00007f6f2bfdd821:   jmp    0x00007f6f2bfdd881
[info]    0.03%   │││││││││││││││││││       │   0x00007f6f2bfdd823:   movabs r10,0x716053b50              ;   {oop(&quot;RacePair&quot;{0x0000000716053b50})}
[info]    0.16%   │││││││││││││││││││╭      │   0x00007f6f2bfdd82d:   jmp    0x00007f6f2bfdd881
[info]    0.00%   ││││││││││││││││││││      │   0x00007f6f2bfdd82f:   movabs r10,0x716053b80              ;   {oop(&quot;Sleep&quot;{0x0000000716053b80})}
[info]    0.16%   ││││││││││││││││││││╭     │   0x00007f6f2bfdd839:   jmp    0x00007f6f2bfdd881
[info]    0.00%   │││││││││││││││││││││     │   0x00007f6f2bfdd83b:   movabs r10,0x716053bb0              ;   {oop(&quot;EvalOn&quot;{0x0000000716053bb0})}
[info]    0.13%   │││││││││││││││││││││╭    │   0x00007f6f2bfdd845:   jmp    0x00007f6f2bfdd881
[info]    0.00%   ││││││││││││││││││││││    │   0x00007f6f2bfdd847:   movabs r10,0x716053be0              ;   {oop(&quot;Blocking&quot;{0x0000000716053be0})}
[info]    0.17%   ││││││││││││││││││││││╭   │   0x00007f6f2bfdd851:   jmp    0x00007f6f2bfdd881
[info]    0.01%   │││││││││││││││││││││││   │   0x00007f6f2bfdd853:   movabs r10,0x716053c10              ;   {oop(&quot;Local&quot;{0x0000000716053c10})}
[info]    0.17%   │││││││││││││││││││││││╭  │   0x00007f6f2bfdd85d:   jmp    0x00007f6f2bfdd881
[info]    0.00%   ││││││││││││││││││││││││  │   0x00007f6f2bfdd85f:   movabs r10,0x716053c40              ;   {oop(&quot;IOTrace&quot;{0x0000000716053c40})}
[info]    0.16%   ││││││││││││││││││││││││╭ │   0x00007f6f2bfdd869:   jmp    0x00007f6f2bfdd881
[info]    0.02%   │││││││││││││││││││││││││ │   0x00007f6f2bfdd86b:   movabs r10,0x716053c70              ;   {oop(&quot;ReadRT&quot;{0x0000000716053c70})}
[info]    0.18%   │││││││││││││││││││││││││╭│   0x00007f6f2bfdd875:   jmp    0x00007f6f2bfdd881
[info]    0.00%   │││││││││││││││││││││││││││   0x00007f6f2bfdd877:   movabs r10,0x716053ca0              ;*invokestatic consumeCompiler {reexecute=0 rethrow=0 return_oop=0}
[info]            │││││││││││││││││││││││││││                                                             ; - org.openjdk.jmh.infra.Blackhole::consume@7 (line 323)
[info]            │││││││││││││││││││││││││││                                                             ; - cats.effect.benchmarks.TagBenchmark::tag@295 (line 212)
[info]            │││││││││││││││││││││││││││                                                             ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_tag_jmhTest::tag_thrpt_jmhStub@17 (line 121)
[info]            │││││││││││││││││││││││││││                                                             ;   {oop(&quot;EndFiber&quot;{0x0000000716053ca0})}
[info]    0.20%   │↘↘↘↘↘↘↘↘↘↘↘↘↘↘↘↘↘↘↘↘↘↘↘↘↘│   0x00007f6f2bfdd881:   cmp    ebp,0x1a
[info]    0.26%   │                         ╰   0x00007f6f2bfdd884:   jge    0x00007f6f2bfdd6e7           ;*getstatic MODULE$ {reexecute=0 rethrow=0 return_oop=0}
[info]            │                                                                                       ; - cats.effect.benchmarks.TagBenchmark::tag@13 (line 184)
[info]            │                                                                                       ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_tag_jmhTest::tag_thrpt_jmhStub@17 (line 121)
[info]            ↘                             0x00007f6f2bfdd88a:   movabs r10,0x7163a4390              ;   {oop(a &apos;cats/effect/benchmarks/FakeIO&apos;[26] {0x00000007163a4390})}
[info]    0.46%                                 0x00007f6f2bfdd894:   mov    r10d,DWORD PTR [r10+rbp*4+0x10]
[info]    5.59%                                 0x00007f6f2bfdd899:   mov    rsi,r10
[info]    0.00%                                 0x00007f6f2bfdd89c:   shl    rsi,0x3                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
[info]                                                                                                    ; - cats.effect.benchmarks.TagBenchmark::tag@20 (line 184)
[info]                                                                                                    ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_tag_jmhTest::tag_thrpt_jmhStub@17 (line 121)
[info]    0.01%                                 0x00007f6f2bfdd8a0:   nop
[info]    0.38%                                 0x00007f6f2bfdd8a1:   movabs rax,0x7f6ea4147678
[info]    2.22%                                 0x00007f6f2bfdd8ab:   call   0x00007f6f2b8ad660           ; ImmutableOopMap {[0]=Oop [64]=Oop [72]=Oop [80]=Oop }
[info]                                                                                                    ;*invokevirtual tag {reexecute=0 rethrow=0 return_oop=0}
[info]                                                                                                    ; - cats.effect.benchmarks.TagBenchmark::tag@21 (line 184)
[info]                                                                                                    ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_tag_jmhTest::tag_thrpt_jmhStub@17 (line 121)
[info]                                                                                                    ;   {virtual_call}
[info]   26.09%                                 0x00007f6f2bfdd8b0:   nop    DWORD PTR [rax+rax*1+0x20007a8];*invokevirtual tag {reexecute=0 rethrow=0 return_oop=0}
[info]                                                                                                    ; - cats.effect.benchmarks.TagBenchmark::tag@21 (line 184)
[info]                                                                                                    ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_tag_jmhTest::tag_thrpt_jmhStub@17 (line 121)
[info]                                                                                                    ;   {post_call_nop}
[info]    0.00%                                 0x00007f6f2bfdd8b8:   lea    r11d,[rax+0x1]
[info]                                          0x00007f6f2bfdd8bc:   cmp    r11d,0x1a                    ;=== Jump to 0x00007f6f2bfdd8d6 (throwing MatchError) if 26 <= rax+1 (so if rax < -1 or 24 < rax)
[info]    0.09%                              ╭  0x00007f6f2bfdd8c0:   jae    0x00007f6f2bfdd8d6           ;*tableswitch {reexecute=0 rethrow=0 return_oop=0}
[info]                                       │                                                            ; - cats.effect.benchmarks.TagBenchmark::tag@28 (line 185)
[info]                                       │                                                            ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_tag_jmhTest::tag_thrpt_jmhStub@17 (line 121)
[info]                                       │  0x00007f6f2bfdd8c2:   movsxd r10,eax
[info]    0.00%                              │  0x00007f6f2bfdd8c5:   inc    ebp                          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
[info]                                       │                                                            ; - cats.effect.benchmarks.TagBenchmark::tag@298 (line 213)
[info]                                       │                                                            ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_tag_jmhTest::tag_thrpt_jmhStub@17 (line 121)
[info]                                       │  0x00007f6f2bfdd8c7:   movabs r8,0x7f6f2bfdd3d0            ;   {section_word}
[info]    0.00%                              │  0x00007f6f2bfdd8d1:   jmp    QWORD PTR [r8+r10*8+0x8]     ;*tableswitch {reexecute=0 rethrow=0 return_oop=0}
[info]                                       │                                                            ; - cats.effect.benchmarks.TagBenchmark::tag@28 (line 185)
[info]                                       │                                                            ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_tag_jmhTest::tag_thrpt_jmhStub@17 (line 121)
[info]                                       ↘  0x00007f6f2bfdd8d6:   mov    esi,0xffffff4d
[info]                                          0x00007f6f2bfdd8db:   mov    DWORD PTR [rsp+0x1c],eax
[info]                                          0x00007f6f2bfdd8df:   call   0x00007f6f2b974c60           ; ImmutableOopMap {[0]=Oop [64]=Oop [72]=Oop [80]=Oop }
[info]                                                                                                    ;*tableswitch {reexecute=1 rethrow=0 return_oop=0}
[info]                                                                                                    ; - (reexecute) cats.effect.benchmarks.TagBenchmark::tag@28 (line 185)
[info]                                                                                                    ; - cats.effect.benchmarks.jmh_generated.TagBenchmark_tag_jmhTest::tag_thrpt_jmhStub@17 (line 121)
[info]                                                                                                    ;   {runtime_call UncommonTrapBlob}
[info]                                          0x00007f6f2bfdd8e4:   nop    DWORD PTR [rax+rax*1+0x30007dc];*tableswitch {reexecute=0 rethrow=0 return_oop=0}
[info] ....................................................................................................
[info]   40.86%  <total for region 1>
[info] ....[Hottest Region 2]..............................................................................
[info] , <unknown>
[info]           --------------------------------------------------------------------------------
[info]           [/Disassembly]
[info]           </print_nmethod>
[info]           <task_queued compile_id='942' method='cats.effect.benchmarks.FakeIO$ReadRT$ tag ()B' bytes='3' count='128' iicount='128' level='1' stamp='5.251' comment='tiered' hot_count='128'/>
[info]           <task_queued compile_id='943' method='cats.effect.benchmarks.FakeIO$EndFiber$ tag ()B' bytes='2' count='128' iicount='128' level='1' stamp='5.251' comment='tiered' hot_count='128'/>
[info]           Decoding VtableStub vtbl[5]@0x00007f6f45715f4d [0x00007f6f2bab4ea0, 0x00007f6f2bab4ebb] (27 bytes)
[info]           --------------------------------------------------------------------------------
[info]    1.23%    0x00007f6f2bab4ea0:   mov    eax,DWORD PTR [rsi+0x8]
[info]   11.48%    0x00007f6f2bab4ea3:   movabs r10,0x7f6ec2000000
[info]             0x00007f6f2bab4ead:   add    rax,r10
[info]             0x00007f6f2bab4eb0:   mov    rbx,QWORD PTR [rax+0x208]
[info]   21.01%    0x00007f6f2bab4eb7:   jmp    QWORD PTR [rbx+0x40]
[info]             0x00007f6f2bab4eba:   .byte 0x0
[info]           --------------------------------------------------------------------------------
[info]           <nmethod compile_id='922' compiler='c1' level='1' entry='0x00007f6f2bfd6780' size='456' address='0x00007f6f2bfd6688' relocation_offset='216' insts_offset='248' stub_offset='392' scopes_data_offset='-2885507280' scopes_pcs_offset='-2885507328' dependencies_offset='-2885507336' oops_offset='440' metadata_offset='448' method='cats.effect.benchmarks.FakeIO$Monotonic$ tag ()B' bytes='2' count='148' iicount='148' stamp='5.251'/>
[info]           <print_nmethod compile_id='922' compiler='c1' level='1' stamp='5.251'>
[info]           ============================= C1-compiled nmethod ==============================
[info]           ----------------------------------- Assembly -----------------------------------
[info]           Compiled method (c1) 5251  922       1       cats.effect.benchmarks.FakeIO$Monotonic$::tag (2 bytes)
[info]            total in heap  [0x00007f6f2bfd6688,0x00007f6f2bfd6850] = 456
[info]            relocation     [0x00007f6f2bfd6760,0x00007f6f2bfd6780] = 32
[info]            main code      [0x00007f6f2bfd6780,0x00007f6f2bfd6810] = 144
[info] ....................................................................................................
[info]   33.71%  <total for region 2>
[info] ....[Hottest Regions]...............................................................................
[info]   40.86%           c2, level 4  cats.effect.benchmarks.jmh_generated.TagBenchmark_tag_jmhTest::tag_thrpt_jmhStub, version 8, compile id 972
[info]   33.71%                        <unknown>
[info]    1.64%           c1, level 1  cats.effect.benchmarks.FakeIO$Sleep::tag, version 1, compile id 937
[info]    1.50%           c1, level 1  cats.effect.benchmarks.FakeIO$Monotonic$::tag, version 1, compile id 922
[info]    1.07%           c1, level 1  cats.effect.benchmarks.FakeIO$Map::tag, version 1, compile id 924
[info]    1.06%           c1, level 1  cats.effect.benchmarks.FakeIO$Canceled$::tag, version 1, compile id 928
[info]    1.03%           c1, level 1  cats.effect.benchmarks.FakeIO$Attempt::tag, version 1, compile id 926
[info]    1.00%           c1, level 1  cats.effect.benchmarks.FakeIO$Pure::tag, version 1, compile id 918
[info]    0.98%           c1, level 1  cats.effect.benchmarks.FakeIO$RacePair::tag, version 1, compile id 936
[info]    0.97%           c1, level 1  cats.effect.benchmarks.FakeIO$ReadRT$::tag, version 1, compile id 942
[info]    0.95%           c1, level 1  cats.effect.benchmarks.FakeIO$Blocking::tag, version 1, compile id 939
[info]    0.93%           c1, level 1  cats.effect.benchmarks.FakeIO$Start::tag, version 1, compile id 935
[info]    0.93%           c1, level 1  cats.effect.benchmarks.FakeIO$Local::tag, version 1, compile id 940
[info]    0.92%           c1, level 1  cats.effect.benchmarks.FakeIO$HandleErrorWith::tag, version 1, compile id 927
[info]    0.92%           c1, level 1  cats.effect.benchmarks.FakeIO$ReadEC$::tag, version 1, compile id 923
[info]    0.91%           c1, level 1  cats.effect.benchmarks.FakeIO$EndFiber$::tag, version 1, compile id 943
[info]    0.91%           c1, level 1  cats.effect.benchmarks.FakeIO$Delay::tag, version 1, compile id 920
[info]    0.90%           c1, level 1  cats.effect.benchmarks.FakeIO$Cede$::tag, version 1, compile id 934
[info]    0.90%           c1, level 1  cats.effect.benchmarks.FakeIO$EvalOn::tag, version 1, compile id 938
[info]    0.89%           c1, level 1  cats.effect.benchmarks.FakeIO$FlatMap::tag, version 1, compile id 925
[info]    7.04%  <...other 139 warm regions...>
[info] ....................................................................................................
[info]  100.00%  <totals>
[info] ....[Hottest Methods (after inlining)]..............................................................
[info]   40.86%           c2, level 4  cats.effect.benchmarks.jmh_generated.TagBenchmark_tag_jmhTest::tag_thrpt_jmhStub, version 8, compile id 972
[info]   33.78%                        <unknown>
[info]    1.64%           c1, level 1  cats.effect.benchmarks.FakeIO$Sleep::tag, version 1, compile id 937
[info]    1.50%           c1, level 1  cats.effect.benchmarks.FakeIO$Monotonic$::tag, version 1, compile id 922
[info]    1.07%           c1, level 1  cats.effect.benchmarks.FakeIO$Map::tag, version 1, compile id 924
[info]    1.06%           c1, level 1  cats.effect.benchmarks.FakeIO$Canceled$::tag, version 1, compile id 928
[info]    1.03%           c1, level 1  cats.effect.benchmarks.FakeIO$Attempt::tag, version 1, compile id 926
[info]    1.00%           c1, level 1  cats.effect.benchmarks.FakeIO$Pure::tag, version 1, compile id 918
[info]    0.98%           c1, level 1  cats.effect.benchmarks.FakeIO$RacePair::tag, version 1, compile id 936
[info]    0.97%           c1, level 1  cats.effect.benchmarks.FakeIO$ReadRT$::tag, version 1, compile id 942
[info]    0.95%           c1, level 1  cats.effect.benchmarks.FakeIO$Blocking::tag, version 1, compile id 939
[info]    0.93%           c1, level 1  cats.effect.benchmarks.FakeIO$Start::tag, version 1, compile id 935
[info]    0.93%           c1, level 1  cats.effect.benchmarks.FakeIO$Local::tag, version 1, compile id 940
[info]    0.92%           c1, level 1  cats.effect.benchmarks.FakeIO$HandleErrorWith::tag, version 1, compile id 927
[info]    0.92%           c1, level 1  cats.effect.benchmarks.FakeIO$ReadEC$::tag, version 1, compile id 923
[info]    0.91%           c1, level 1  cats.effect.benchmarks.FakeIO$EndFiber$::tag, version 1, compile id 943
[info]    0.91%           c1, level 1  cats.effect.benchmarks.FakeIO$Delay::tag, version 1, compile id 920
[info]    0.90%           c1, level 1  cats.effect.benchmarks.FakeIO$Cede$::tag, version 1, compile id 934
[info]    0.90%           c1, level 1  cats.effect.benchmarks.FakeIO$EvalOn::tag, version 1, compile id 938
[info]    0.89%           c1, level 1  cats.effect.benchmarks.FakeIO$FlatMap::tag, version 1, compile id 925
[info]    6.97%  <...other 39 warm methods...>
[info] ....................................................................................................
[info]  100.00%  <totals>
[info] ....[Distribution by Source]........................................................................
[info]   40.86%           c2, level 4
[info]   33.78%
[info]   25.21%           c1, level 1
[info]    0.07%                kernel
[info]    0.03%             libc.so.6
[info]    0.02%             libjvm.so
[info]    0.01%           interpreter
[info]    0.01%        hsdis-amd64.so
[info]    0.00%                [vdso]
[info]    0.00%  ld-linux-x86-64.so.2
[info]    0.00%           c1, level 3
[info]    0.00%      perf-1351193.map
[info] ....................................................................................................
[info]  100.00%  <totals>
[info] # Run complete. Total time: 00:06:53
[info] REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
[info] why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
[info] experiments, perform baseline and negative tests that provide experimental control, make sure
[info] the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
[info] Do not assume the numbers tell you what you want them to tell.
[info] NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
[info] extra caution when trusting the results, look into the generated code to check the benchmark still
[info] works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
[info] different JVMs are already problematic, the performance difference caused by different Blackhole
[info] modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.
[info] Benchmark                     Mode  Cnt        Score       Error  Units
[info] TagBenchmark.classValue      thrpt   10  5734585.535 ± 55996.550  ops/s
[info] TagBenchmark.classValue:asm  thrpt               NaN                ---
[info] TagBenchmark.tag             thrpt   10  5992351.716 ± 42882.574  ops/s
[info] TagBenchmark.tag:asm         thrpt               NaN                ---
[success] Total time: 415 s (06:55), completed Aug 7, 2025, 11:23:06 PM
sbt:xuwei-k-bench>
